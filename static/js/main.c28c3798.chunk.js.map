{"version":3,"sources":["ui/Header/Header.module.css","ui/Common/Button/Button.module.css","ui/Common/Input/Input.module.css","ui/Login/Login.module.css","ui/NewPass/NewPass.module.css","ui/PageNotFound/PageNotFound.module.css","ui/Profile/Profile.module.css","ui/Registration/Registration.module.css","ui/RestorePass/RestorePass.module.css","ui/Common/NavigationLink/NavigationLink.tsx","ui/Header/Header.tsx","ui/Routes/routes.ts","ui/Common/Button/Button.tsx","ui/Common/Input/Input.tsx","ui/Login/Login.tsx","ui/Login/LoginContainer.tsx","ui/NewPass/NewPass.tsx","ui/NewPass/NewPassContainer.tsx","ui/PageNotFound/PageNotFound.tsx","ui/Profile/Profile.tsx","ui/Profile/ProfileContainer.tsx","ui/Registration/Registration.tsx","ui/Registration/RegistrationContainer.tsx","ui/RestorePass/RestorePass.tsx","ui/RestorePass/RestorePassContainer.tsx","ui/Main/Main.tsx","App.tsx","serviceWorker.ts","bll/restorePas-reducer.ts","bll/registration-reducer.ts","bll/profile-reducer.ts","bll/newPass-reducer.ts","bll/login-reducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","NavigationLink","props","to","title","Header","className","style","navigation","Button","onClick","btn","text","Input","inputStyle","value","onChange","event","currentTarget","Login","login","console","log","alert","LoginContainer","useSelector","state","useDispatch","NewPass","newPass","NewPassContainer","newPassword","PageNotFound","exact","path","pageNotFound","Profile","profile","ProfileContainer","Registration","registration","RegistrationContainer","RestorePass","restorePass","RestorePassContainer","restorePassword","Main","render","App","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","type","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c28c3798.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__2mGBP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3fIXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"Input_inputStyle__2QB-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3zKks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPass\":\"NewPass_newPass__2mSUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNotFound\":\"PageNotFound_pageNotFound__23x1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3wQK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__2o_uK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePass\":\"RestorePass_restorePass__2Zutx\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype NavigationLinkPropsType = {\r\n\tto: string,\r\n\ttitle: string\r\n}\r\n\r\nconst NavigationLink = (props: NavigationLinkPropsType) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavLink to={props.to}>{props.title}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavigationLink;","import React from 'react';\r\nimport NavigationLink from '../Common/NavigationLink/NavigationLink';\r\nimport { login, newPass, profile, registration, restorePass } from '../Routes/routes';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<nav className={style.navigation}>\r\n\t\t\t<NavigationLink to={login} title={\"Login\"}/>\r\n\t\t\t<NavigationLink to={newPass} title={\"New password\"}/>\r\n\t\t\t<NavigationLink to={restorePass} title={\"Restore password\"}/>\r\n\t\t\t<NavigationLink to={profile} title={\"Profile\"}/>\r\n\t\t\t<NavigationLink to={registration} title={\"Registration\"}/>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Header;","export const login: string = '/login';\r\nexport const newPass: string = '/newPassword';\r\nexport const profile: string = '/profile';\r\nexport const restorePass: string = '/restorePassword';\r\nexport const registration: string = '/registration';\r\n// export const pageNotFound: string = '/pageNotFound_404';","import React from 'react';\r\nimport style from './Button.module.css';\r\n\r\ntype ButtonPropsType = {\r\n\ttext: string,\r\n\tonClick: () => void\r\n};\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\r\n\tconst onClick = () => {\r\n\t\tprops.onClick();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button onClick={onClick} className={style.btn}>{props.text}</button>\r\n\t)\r\n}\r\n\r\nexport default Button;","import React, { ChangeEvent } from 'react';\r\nimport style from './Input.module.css';\r\n\r\ntype InputPropsType = {\r\n\tvalue: string,\r\n\tonChange: (text: string) => void,\r\n}\r\n\r\nconst Input = (props: InputPropsType) => {\r\n\tconst onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.onChange(event.currentTarget.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<input className={style.inputStyle} value={props.value}\r\n\t\t\tonChange={onChange}\r\n\t\t></input>\r\n\t)\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Button from '../Common/Button/Button';\r\nimport Input from '../Common/Input/Input';\r\nimport style from './Login.module.css';\r\n\r\ntype LoginPropType = any\r\n\r\nconst Login = (props: LoginPropType) => {\r\n\treturn (\r\n\t\t<div className={style.login}>\r\n\t\t\t<h2>Login Page</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<Input value={'Choose the dark side'} onChange={(text: string) => console.log(text)} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button text={'we have cookies!:)'} onClick={() => alert('You have chosen wisely')} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginStateType } from '../../bll/login-reducer';\r\nimport { AppRootStateType } from '../../bll/store';\r\nimport Login from './Login';\r\n\r\nconst LoginContainer = () => {\r\n\r\n\tconst login = useSelector<AppRootStateType, LoginStateType>(state => state.login);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<Login />\r\n\t)\r\n}\r\n\r\nexport default LoginContainer;","import React from 'react';\r\nimport style from './NewPass.module.css';\r\n\r\ntype NewPassPropsType = any;\r\n\r\nconst NewPass = (props: NewPassPropsType) => {\r\n\treturn (\r\n\t\t<div className={style.newPass}>\r\n\t\t\t<h2>New Password Page</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NewPass;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NewPassStateType } from '../../bll/newPass-reducer';\r\nimport { AppRootStateType } from '../../bll/store';\r\nimport NewPass from './NewPass';\r\n\r\nconst NewPassContainer = () => {\r\n\r\n\tconst newPass = useSelector<AppRootStateType, NewPassStateType>(state => state.newPassword);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<NewPass />\r\n\t)\r\n}\r\n\r\nexport default NewPassContainer;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport style from './PageNotFound.module.css';\r\n\r\nconst PageNotFound = () => {\r\n\r\n\tif (<Route exact path={'/'} />) {\r\n\t\treturn <Redirect to={'/login'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.pageNotFound}>\r\n\t\t\t<h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span>PAGE NOT FOUND</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span>404 ERROR!</span>\r\n\t\t\t\t</div>\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport style from './Profile.module.css';\r\n\r\ntype ProfilePropsType = any\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\treturn (\r\n\t\t<div className={style.profile}>\r\n\t\t\t<h2>Profile Page</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProfileStateType } from '../../bll/profile-reducer';\r\nimport { AppRootStateType } from '../../bll/store';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = () => {\r\n\r\n\tconst profile = useSelector<AppRootStateType, ProfileStateType>(state => state.profile);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<Profile />\r\n\t)\r\n}\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport style from './Registration.module.css'\r\n\r\ntype RegistrationPropsType = any\r\n\r\nconst Registration = (props: RegistrationPropsType) => {\r\n\treturn (\r\n\t\t<div className={style.registration}>\r\n\t\t\t<h2>Registration Page</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Registration;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RegistrationStateType } from '../../bll/registration-reducer';\r\nimport { AppRootStateType } from '../../bll/store';\r\nimport Registration from './Registration';\r\n\r\nconst RegistrationContainer = () => {\r\n\r\n\tconst registration = useSelector<AppRootStateType, RegistrationStateType>(state => state.registration);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<Registration/>\r\n\t)\r\n}\r\n\r\nexport default RegistrationContainer;","import React from 'react';\r\nimport style from './RestorePass.module.css';\r\n\r\ntype RestorePassPropsType = any\r\n\r\nconst RestorePass = (props: RestorePassPropsType) => {\r\n\treturn (\r\n\t\t<div className={style.restorePass}>\r\n\t\t\t<h2>Restore password page</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RestorePass;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RestorePassStateType } from '../../bll/restorePas-reducer';\r\nimport { AppRootStateType } from '../../bll/store';\r\nimport RestorePass from './RestorePass';\r\n\r\nconst RestorePassContainer = () => {\r\n\r\n\tconst restorePass = useSelector<AppRootStateType, RestorePassStateType>(state => state.restorePassword);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<RestorePass/>\r\n\t)\r\n}\r\n\r\nexport default RestorePassContainer;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport LoginContainer from '../Login/LoginContainer';\r\nimport NewPassContainer from '../NewPass/NewPassContainer';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport ProfileContainer from '../Profile/ProfileContainer';\r\nimport RegistrationContainer from '../Registration/RegistrationContainer';\r\nimport RestorePassContainer from '../RestorePass/RestorePassContainer';\r\nimport { login, newPass, profile, registration, restorePass } from '../Routes/routes';\r\n\r\nconst Main = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={login} render={() => <LoginContainer />} />\r\n\t\t\t\t<Route path={newPass} render={() => <NewPassContainer />} />\r\n\t\t\t\t<Route path={restorePass} render={() => <RestorePassContainer />} />\r\n\t\t\t\t<Route path={profile} render={() => <ProfileContainer />} />\r\n\t\t\t\t<Route path={registration} render={() => <RegistrationContainer />} />\r\n\t\t\t\t<Route render={() => <PageNotFound/>}/>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\timport './App.css';\nimport Main from './ui/Main/Main';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{/* hashRouter, provider */}\n\t\t\t<HashRouter>\n\t\t\t\t<Main/>\n\t\t\t</HashRouter>\n\t\t</div>\n\t);\n}\n\n\n//{/* <Header/> */}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export type RestorePassStateType = any\r\n\r\nexport type ActionsType = any;\r\n\r\nconst initialState: RestorePassStateType = {};\r\n\r\nexport const restorePasswordReducer = (state: RestorePassStateType = initialState, action: ActionsType): RestorePassStateType => {\r\n\tswitch(action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}","export type RegistrationStateType = any\r\n\r\nexport type ActionsType = any;\r\n\r\nconst initialState: RegistrationStateType = {}\r\n\r\nexport const registrationReducer = (state: RegistrationStateType = initialState, action: ActionsType): RegistrationStateType => {\r\n\tswitch(action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}","export type ProfileStateType = any\r\n\r\nexport type ActionsType = any;\r\n\r\nconst initialState: ProfileStateType = {}\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionsType): ProfileStateType => {\r\n\tswitch(action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}","export type NewPassStateType = any\r\n\r\nexport type ActionsType = any;\r\n\r\nconst initialState = {}\r\n\r\nexport const newPasswordReducer = (state: NewPassStateType = initialState, action: ActionsType): NewPassStateType => {\r\n\tswitch(action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}","export type LoginStateType = any\r\n\r\nexport type ActionsType = any;\r\n\r\nlet initialState: LoginStateType = {}\r\n\r\nexport const loginReducer = (state: LoginStateType = initialState, action: ActionsType): LoginStateType => {\r\n\tswitch(action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}","import { restorePasswordReducer } from './restorePas-reducer';\r\nimport { registrationReducer } from './registration-reducer';\r\nimport { profileReducer } from './profile-reducer';\r\nimport { newPasswordReducer } from './newPass-reducer';\r\nimport { loginReducer } from './login-reducer';\r\nimport { combineReducers, createStore } from \"redux\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    newPassword: newPasswordReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    restorePassword: restorePasswordReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport { store } from './bll/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}